name: Web Application CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo-app 
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: kartik
          POSTGRES_DB: database_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run linting and code formatting
        run: npm run lint
        
      - name: Set up Homebrew
        run: |
         /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
         echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH

      - name: Build the application
        run: npm run build

      - name: Install Render CLI
        run: |
          brew tap render-oss/render
          brew install render
          render --version

      - name: Run automated tests
        run: npm test

      - name: Deploy to production
        if: success()
        run: |
          render login --email ${{ secrets.RENDER_EMAIL }} --password ${{ secrets.RENDER_PASSWORD }}
          render deploy --branch main -- --build-env NODE_ENV=production

      - name: Notify on failure
        if: failure()
        run: |
          # Add error reporting and notification logic here
          echo "Pipeline failed! Please check the logs for details."
