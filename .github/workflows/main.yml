name: Auto test L10 solution
on: push

env:
  PG_DATABASE: database_test
  PG_USER: postgres
  PG_PASSWORD: kartik  # Placeholder! Avoid hardcoding credentials in CI/CD
  APP_DIR: todo-app  # Ensure consistency with potential project layout

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: kartik  
          POSTGRES_DB: database_test
        ports:
          - 5432:5432
        # Consider using a health check library like `wait-for-postgres`

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: cd ${{ env.APP_DIR }} && npm install

      - name: Run unit tests
        run: cd ${{ env.APP_DIR }} && npm test

      - name: Run app and database setup
        # Combine steps for clarity and efficiency
        run: |
          cd ${{ env.APP_DIR }}
          npm install
          NODE_ENV=test npx sequelize-cli db:drop
          NODE_ENV=test npx sequelize-cli db:create
          NODE_ENV=test npx sequelize-cli db:migrate
          npm run clean:start &

          # Wait for app and database to be ready:
          export WAIT_TIMEOUT=60  # Customize timeout if needed
          until curl -sf http://localhost:3000/health >/dev/null 2>&1; do
            echo "Waiting for app and database..."
            sleep 5
            if [[ $WAIT_TIMEOUT -le 0 ]]; then
              echo "Timed out waiting for app and database!"
              exit 1
            fi
            WAIT_TIMEOUT=$((WAIT_TIMEOUT-5))
          done

      - name: Run integration tests with Cypress
        run: |
          cd ${{ env.APP_DIR }}
          npm install cypress cypress-json-results
          npx cypress run --env STUDENT_SUBMISSION_URL="http://localhost:3000/"

      - name: Collect and upload test results
        run: |
          # Adapt based on preferred reporting tools or formats
          npx cypress run --record --reporter json
          mkdir test-results
          mv cypress/results/*.json test-results/
          # Upload test results to a persistent storage service like GitHub Actions artifacts
          # ...

      - name: Clean up database (optional)
        run: |
          cd ${{ env.APP_DIR }}
          NODE_ENV=test npx sequelize-cli db:drop
